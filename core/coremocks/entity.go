// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package coremocks

import (
	core "github.com/stackus/edat/core"
	mock "github.com/stretchr/testify/mock"
)

// Entity is an autogenerated mock type for the Entity type
type Entity struct {
	mock.Mock
}

// AddEvent provides a mock function with given fields: events
func (_m *Entity) AddEvent(events ...core.Event) {
	_va := make([]interface{}, len(events))
	for _i := range events {
		_va[_i] = events[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _va...)
	_m.Called(_ca...)
}

// ClearEvents provides a mock function with given fields:
func (_m *Entity) ClearEvents() {
	_m.Called()
}

// EntityName provides a mock function with given fields:
func (_m *Entity) EntityName() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// Events provides a mock function with given fields:
func (_m *Entity) Events() []core.Event {
	ret := _m.Called()

	var r0 []core.Event
	if rf, ok := ret.Get(0).(func() []core.Event); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]core.Event)
		}
	}

	return r0
}

// ID provides a mock function with given fields:
func (_m *Entity) ID() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}
