// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package msgmocks

import (
	context "context"

	core "github.com/stackus/edat/core"
	mock "github.com/stretchr/testify/mock"

	msg "github.com/stackus/edat/msg"
)

// ReplyMessagePublisher is an autogenerated mock type for the ReplyMessagePublisher type
type ReplyMessagePublisher struct {
	mock.Mock
}

// PublishReply provides a mock function with given fields: ctx, reply, options
func (_m *ReplyMessagePublisher) PublishReply(ctx context.Context, reply core.Reply, options ...msg.MessageOption) error {
	_va := make([]interface{}, len(options))
	for _i := range options {
		_va[_i] = options[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, reply)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, core.Reply, ...msg.MessageOption) error); ok {
		r0 = rf(ctx, reply, options...)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
